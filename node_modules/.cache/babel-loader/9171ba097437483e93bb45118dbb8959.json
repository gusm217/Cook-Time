{"ast":null,"code":"var _jsxFileName = \"/home/vinicius/Desktop/AppRecipes/sd-011-project-recipes-app/src/Pages/Components/InprogressDrink.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ShareButton from './ShareButton';\nimport verifyIngredients from '../../Helpers/verifyIngredients';\nimport '../../styles/detail-screen.css';\nimport FavoriteButton from './FavoriteButton';\nimport { manageDetailAPI } from '../../Helpers/convertUrlToID';\n\nfunction InProgressDrink() {\n  const {\n    id\n  } = useParams();\n  const [usedIngredients, setUsedIngredients] = useState([]);\n  const [showFinish, setShowFinish] = useState(true);\n  const [itemDetail, setItemDetail] = useState({\n    drinks: null\n  });\n  const arrayOfIngredients = [];\n  const arrayOfMeasures = [];\n  useEffect(() => {\n    const currentStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (!currentStorage) {\n      localStorage.setItem('inProgressRecipes', JSON.stringify({\n        cocktails: {\n          [id]: []\n        },\n        meals: {}\n      }));\n    }\n\n    if (currentStorage && currentStorage.cocktails[id]) {\n      setUsedIngredients(currentStorage.cocktails[id]);\n    }\n\n    const fetchFood = async () => {\n      const URL = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`;\n      const response = await fetch(URL);\n      const detailRequest = await response.json();\n      setItemDetail(manageDetailAPI(detailRequest));\n    };\n\n    fetchFood();\n\n    if (arrayOfIngredients.length === usedIngredients.length) {\n      setShowFinish(false);\n    } else {\n      setShowFinish(true);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  useEffect(() => {\n    const currentStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    currentStorage.cocktails[id] = usedIngredients;\n    localStorage.setItem('inProgressRecipes', JSON.stringify(currentStorage)); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n    if (arrayOfIngredients.length === usedIngredients.length) {\n      setShowFinish(false);\n    } else {\n      setShowFinish(true);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [usedIngredients, arrayOfIngredients]); // Parte que separa os ingredientes da receitas\n\n  if (itemDetail.drinks !== null) {\n    const food = itemDetail.drinks[0];\n    const arrayOfIngredientsKey = Object.keys(food).filter(key => key.includes('strIngredient'));\n    const arrayOfMeasuresKey = Object.keys(food).filter(key => key.includes('strMeasure'));\n    arrayOfIngredientsKey.map(ingredient => verifyIngredients(food[ingredient], arrayOfIngredients));\n    arrayOfMeasuresKey.map(ingredient => verifyIngredients(food[ingredient], arrayOfMeasures));\n  }\n\n  function handleCheckBox(ingredient) {\n    return usedIngredients.includes(ingredient) ? setUsedIngredients(usedIngredients.filter(ing => ing !== ingredient)) : setUsedIngredients(usedIngredients.concat(ingredient));\n  }\n\n  const {\n    drinks\n  } = itemDetail;\n  return itemDetail.drinks !== null && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, drinks[0].strDrink), /*#__PURE__*/React.createElement(\"img\", {\n    width: \"350\",\n    src: drinks[0].strDrinkThumb,\n    alt: `Foto da bebida chamada ${drinks[0].strDrink}`,\n    \"data-testid\": \"recipe-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FavoriteButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ShareButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, drinks[0].strCategory), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"Ingredientes\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"steps-inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, arrayOfIngredients.map((ingredient, i) => /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: ingredient,\n    key: `${ingredient}-${i}`,\n    \"data-testid\": `${i}-ingredient-step`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: ingredient,\n    onChange: () => handleCheckBox(ingredient),\n    checked: usedIngredients.includes(ingredient),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }), `${arrayOfIngredients[i]} - ${arrayOfMeasures[i]}`)))), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, \"Instru\\xE7\\xF5es\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, drinks[0].strInstructions)), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"finish-recipe-btn\",\n    type: \"button\",\n    disabled: showFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, \"Finalizar Receita\"));\n}\n\nexport default InProgressDrink;","map":{"version":3,"sources":["/home/vinicius/Desktop/AppRecipes/sd-011-project-recipes-app/src/Pages/Components/InprogressDrink.jsx"],"names":["React","useEffect","useState","useParams","ShareButton","verifyIngredients","FavoriteButton","manageDetailAPI","InProgressDrink","id","usedIngredients","setUsedIngredients","showFinish","setShowFinish","itemDetail","setItemDetail","drinks","arrayOfIngredients","arrayOfMeasures","currentStorage","JSON","parse","localStorage","getItem","setItem","stringify","cocktails","meals","fetchFood","URL","response","fetch","detailRequest","json","length","food","arrayOfIngredientsKey","Object","keys","filter","key","includes","arrayOfMeasuresKey","map","ingredient","handleCheckBox","ing","concat","strDrink","strDrinkThumb","strCategory","i","strInstructions"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ShareButton from './ShareButton';\nimport verifyIngredients from '../../Helpers/verifyIngredients';\nimport '../../styles/detail-screen.css';\nimport FavoriteButton from './FavoriteButton';\nimport { manageDetailAPI } from '../../Helpers/convertUrlToID';\n\nfunction InProgressDrink() {\n  const { id } = useParams();\n  const [usedIngredients, setUsedIngredients] = useState([]);\n  const [showFinish, setShowFinish] = useState(true);\n  const [itemDetail, setItemDetail] = useState({\n    drinks: null,\n  });\n\n  const arrayOfIngredients = [];\n  const arrayOfMeasures = [];\n\n  useEffect(() => {\n    const currentStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (!currentStorage) {\n      localStorage.setItem('inProgressRecipes', JSON.stringify({\n        cocktails: { [id]: [] },\n        meals: {},\n      }));\n    }\n\n    if (currentStorage && currentStorage.cocktails[id]) {\n      setUsedIngredients(currentStorage.cocktails[id]);\n    }\n\n    const fetchFood = async () => {\n      const URL = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`;\n      const response = await fetch(URL);\n      const detailRequest = await response.json();\n      setItemDetail(manageDetailAPI(detailRequest));\n    };\n    fetchFood();\n\n    if (arrayOfIngredients.length === usedIngredients.length) {\n      setShowFinish(false);\n    } else {\n      setShowFinish(true);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const currentStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    currentStorage.cocktails[id] = usedIngredients;\n    localStorage.setItem('inProgressRecipes', JSON.stringify(currentStorage));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n    if (arrayOfIngredients.length === usedIngredients.length) {\n      setShowFinish(false);\n    } else {\n      setShowFinish(true);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [usedIngredients, arrayOfIngredients]);\n\n  // Parte que separa os ingredientes da receitas\n  if (itemDetail.drinks !== null) {\n    const food = itemDetail.drinks[0];\n\n    const arrayOfIngredientsKey = Object\n      .keys(food).filter((key) => key.includes('strIngredient'));\n    const arrayOfMeasuresKey = Object\n      .keys(food).filter((key) => key.includes('strMeasure'));\n    arrayOfIngredientsKey\n      .map((ingredient) => verifyIngredients(food[ingredient], arrayOfIngredients));\n    arrayOfMeasuresKey\n      .map((ingredient) => verifyIngredients(food[ingredient], arrayOfMeasures));\n  }\n\n  function handleCheckBox(ingredient) {\n    return usedIngredients.includes(ingredient)\n      ? setUsedIngredients(usedIngredients.filter((ing) => ing !== ingredient))\n      : setUsedIngredients(usedIngredients.concat(ingredient));\n  }\n\n  const { drinks } = itemDetail;\n  return itemDetail.drinks !== null && (\n    <div>\n      <h1 data-testid=\"recipe-title\">{drinks[0].strDrink}</h1>\n      <img\n        width=\"350\"\n        src={ drinks[0].strDrinkThumb }\n        alt={ `Foto da bebida chamada ${drinks[0].strDrink}` }\n        data-testid=\"recipe-photo\"\n      />\n      <FavoriteButton />\n      {/* <button data-testid=\"favorite-btn\" type=\"button\">Favoritar</button> */}\n      <ShareButton />\n      <p data-testid=\"recipe-category\">{drinks[0].strCategory}</p>\n      <section>\n        <h2>Ingredientes</h2>\n        <div className=\"steps-inputs\">\n          { arrayOfIngredients.map((ingredient, i) => (\n            <label\n              htmlFor={ ingredient }\n              key={ `${ingredient}-${i}` }\n              data-testid={ `${i}-ingredient-step` }\n            >\n              <input\n                type=\"checkbox\"\n                id={ ingredient }\n                onChange={ () => handleCheckBox(ingredient) }\n                checked={ usedIngredients.includes(ingredient) }\n              />\n              {`${arrayOfIngredients[i]} - ${arrayOfMeasures[i]}`}\n            </label>\n          ))}\n        </div>\n      </section>\n      <section>\n        <h2>Instruções</h2>\n        <p data-testid=\"instructions\">{drinks[0].strInstructions}</p>\n      </section>\n      <button\n        data-testid=\"finish-recipe-btn\"\n        type=\"button\"\n        disabled={ showFinish }\n      >\n        Finalizar Receita\n      </button>\n    </div>\n  );\n}\n\nexport default InProgressDrink;\n"]},"metadata":{},"sourceType":"module"}