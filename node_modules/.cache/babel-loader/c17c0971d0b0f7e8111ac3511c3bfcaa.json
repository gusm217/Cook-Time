{"ast":null,"code":"var _jsxFileName = \"/home/vinicius/Desktop/AppRecipes/sd-011-project-recipes-app/src/Pages/Components/IngredientsCard.jsx\";\nimport React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Context from '../../Context_Configs/Context';\nexport default function IngredientsCard({\n  ingredient,\n  index,\n  type\n}) {\n  const {\n    setRequestFoodParams,\n    setRequestDrinksParams\n  } = useContext(Context);\n  let strName;\n  let INGREDIENT_IMAGE;\n  const history = useHistory();\n\n  function renderIngredients() {\n    switch (type) {\n      case 'drink':\n        setRequestDrinksParams({\n          searchInput: strName,\n          searchMethod: 'ingredients'\n        });\n        history.push('/bebidas');\n        break;\n\n      case 'meal':\n        setRequestFoodParams({\n          searchInput: strName,\n          searchMethod: 'ingredients'\n        });\n        history.push('/comidas');\n        break;\n\n      default:\n    }\n  }\n\n  if (type === 'drink') {\n    strName = ingredient.strIngredient1;\n    INGREDIENT_IMAGE = `https://www.thecocktaildb.com/images/ingredients/${strName}-Small.png`;\n  } else {\n    strName = ingredient.strIngredient;\n    INGREDIENT_IMAGE = `https://www.themealdb.com/images/ingredients/${strName}-Small.png`;\n  }\n\n  return (\n    /*#__PURE__*/\n    // <button type=\"button\" onClick={ () => renderIngredients() }>\n    React.createElement(\"div\", {\n      \"data-testid\": `${index}-ingredient-card`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      \"data-testid\": `${index}-card-img`,\n      alt: `Imagem of a/an ${strName}`,\n      src: INGREDIENT_IMAGE,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${index}-card-name`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, strName))) // </button>\n\n  );\n}\nIngredientsCard.propTypes = {\n  ingredient: PropTypes.objectOf(PropTypes.string.isRequired).isRequired,\n  index: PropTypes.number.isRequired,\n  type: PropTypes.isRequired\n};","map":{"version":3,"sources":["/home/vinicius/Desktop/AppRecipes/sd-011-project-recipes-app/src/Pages/Components/IngredientsCard.jsx"],"names":["React","useContext","useHistory","PropTypes","Context","IngredientsCard","ingredient","index","type","setRequestFoodParams","setRequestDrinksParams","strName","INGREDIENT_IMAGE","history","renderIngredients","searchInput","searchMethod","push","strIngredient1","strIngredient","propTypes","objectOf","string","isRequired","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AAEA,eAAe,SAASC,eAAT,CAAyB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA;AAArB,CAAzB,EAAsD;AACnE,QAAM;AAAEC,IAAAA,oBAAF;AAAwBC,IAAAA;AAAxB,MAAmDT,UAAU,CAACG,OAAD,CAAnE;AACA,MAAIO,OAAJ;AACA,MAAIC,gBAAJ;AACA,QAAMC,OAAO,GAAGX,UAAU,EAA1B;;AAEA,WAASY,iBAAT,GAA6B;AAC3B,YAAQN,IAAR;AACA,WAAK,OAAL;AACEE,QAAAA,sBAAsB,CAAC;AACrBK,UAAAA,WAAW,EAAEJ,OADQ;AACCK,UAAAA,YAAY,EAAE;AADf,SAAD,CAAtB;AAEAH,QAAAA,OAAO,CAACI,IAAR,CAAa,UAAb;AACA;;AACF,WAAK,MAAL;AACER,QAAAA,oBAAoB,CAAC;AACnBM,UAAAA,WAAW,EAAEJ,OADM;AACGK,UAAAA,YAAY,EAAE;AADjB,SAAD,CAApB;AAEAH,QAAAA,OAAO,CAACI,IAAR,CAAa,UAAb;AACA;;AACF;AAXA;AAaD;;AAED,MAAIT,IAAI,KAAK,OAAb,EAAsB;AACpBG,IAAAA,OAAO,GAAGL,UAAU,CAACY,cAArB;AACAN,IAAAA,gBAAgB,GAAI,oDAAmDD,OAAQ,YAA/E;AACD,GAHD,MAGO;AACLA,IAAAA,OAAO,GAAGL,UAAU,CAACa,aAArB;AACAP,IAAAA,gBAAgB,GAAI,gDAA+CD,OAAQ,YAA3E;AACD;;AAED;AAAA;AACE;AACE;AAAK,qBAAe,GAAEJ,KAAM,kBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,qBAAe,GAAEA,KAAM,WADzB;AAEE,MAAA,GAAG,EAAI,kBAAiBI,OAAQ,EAFlC;AAGE,MAAA,GAAG,EAAGC,gBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,qBAAe,GAAEL,KAAM,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyCI,OAAzC,CADF,CANF,CAFJ,CAYE;;AAZF;AAcD;AAEDN,eAAe,CAACe,SAAhB,GAA4B;AAC1Bd,EAAAA,UAAU,EAAEH,SAAS,CAACkB,QAAV,CAAmBlB,SAAS,CAACmB,MAAV,CAAiBC,UAApC,EAAgDA,UADlC;AAE1BhB,EAAAA,KAAK,EAAEJ,SAAS,CAACqB,MAAV,CAAiBD,UAFE;AAG1Bf,EAAAA,IAAI,EAAEL,SAAS,CAACoB;AAHU,CAA5B","sourcesContent":["import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Context from '../../Context_Configs/Context';\n\nexport default function IngredientsCard({ ingredient, index, type }) {\n  const { setRequestFoodParams, setRequestDrinksParams } = useContext(Context);\n  let strName;\n  let INGREDIENT_IMAGE;\n  const history = useHistory();\n\n  function renderIngredients() {\n    switch (type) {\n    case 'drink':\n      setRequestDrinksParams({\n        searchInput: strName, searchMethod: 'ingredients' });\n      history.push('/bebidas');\n      break;\n    case 'meal':\n      setRequestFoodParams({\n        searchInput: strName, searchMethod: 'ingredients' });\n      history.push('/comidas');\n      break;\n    default:\n    }\n  }\n\n  if (type === 'drink') {\n    strName = ingredient.strIngredient1;\n    INGREDIENT_IMAGE = `https://www.thecocktaildb.com/images/ingredients/${strName}-Small.png`;\n  } else {\n    strName = ingredient.strIngredient;\n    INGREDIENT_IMAGE = `https://www.themealdb.com/images/ingredients/${strName}-Small.png`;\n  }\n\n  return (\n    // <button type=\"button\" onClick={ () => renderIngredients() }>\n      <div data-testid={ `${index}-ingredient-card` }>\n        <img\n          data-testid={ `${index}-card-img` }\n          alt={ `Imagem of a/an ${strName}` }\n          src={ INGREDIENT_IMAGE }\n        />\n        <div>\n          <p data-testid={ `${index}-card-name` }>{strName}</p>\n        </div>\n      </div>\n    // </button>\n  );\n}\n\nIngredientsCard.propTypes = {\n  ingredient: PropTypes.objectOf(PropTypes.string.isRequired).isRequired,\n  index: PropTypes.number.isRequired,\n  type: PropTypes.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}