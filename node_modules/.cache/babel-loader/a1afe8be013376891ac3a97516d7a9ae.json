{"ast":null,"code":"var _jsxFileName = \"/home/vinicius/Desktop/AppRecipes/sd-011-project-recipes-app/src/Pages/Components/Secondary/SecondShareButton.jsx\";\nimport React from 'react';\nimport copy from 'clipboard-copy';\nimport PropTypes from 'prop-types';\nimport shareIcon from \"../../../images/shareIcon.svg\";\n\nfunction SecondShareButton({\n  itemId,\n  type,\n  testID\n}) {\n  console.log(typeof itemId);\n  console.log(typeof type);\n  console.log(typeof testID);\n  const [showCopy, setShowCopy] = React.useState(false);\n\n  function copyToClipBoard() {\n    copy(`http://localhost:3000/${type.includes('bebida') ? 'bebidas' : 'comidas'}/${itemId}`);\n    setShowCopy(true);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => copyToClipBoard(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": testID,\n    src: shareIcon,\n    alt: \"Bot\\xE3o compartilhar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  })), showCopy && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, \"Link copiado!\"));\n}\n\nexport default SecondShareButton;\nSecondShareButton.propTypes = {\n  itemId: PropTypes.number.isRequired,\n  type: PropTypes.string.isRequired,\n  testID: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/home/vinicius/Desktop/AppRecipes/sd-011-project-recipes-app/src/Pages/Components/Secondary/SecondShareButton.jsx"],"names":["React","copy","PropTypes","SecondShareButton","itemId","type","testID","console","log","showCopy","setShowCopy","useState","copyToClipBoard","includes","shareIcon","propTypes","number","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAGA,SAASC,iBAAT,CAA2B;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,IAAV;AAAgBC,EAAAA;AAAhB,CAA3B,EAAqD;AACnDC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOJ,MAAnB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOH,IAAnB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOF,MAAnB;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BV,KAAK,CAACW,QAAN,CAAe,KAAf,CAAhC;;AAEA,WAASC,eAAT,GAA2B;AACzBX,IAAAA,IAAI,CAAE,yBAAwBI,IAAI,CAACQ,QAAL,CAAc,QAAd,IAC1B,SAD0B,GACd,SAAU,IAAGT,MAAO,EADhC,CAAJ;AAEAM,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AACD,sBACE,uDACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAG,MAAME,eAAe,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,mBAAcN,MADhB;AAEE,IAAA,GAAG,EAAGQ,SAFR;AAGE,IAAA,GAAG,EAAC,uBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAQIL,QAAQ,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARhB,CADF;AAYD;;AAED,eAAeN,iBAAf;AAEAA,iBAAiB,CAACY,SAAlB,GAA8B;AAC5BX,EAAAA,MAAM,EAAEF,SAAS,CAACc,MAAV,CAAiBC,UADG;AAE5BZ,EAAAA,IAAI,EAAEH,SAAS,CAACgB,MAAV,CAAiBD,UAFK;AAG5BX,EAAAA,MAAM,EAAEJ,SAAS,CAACgB,MAAV,CAAiBD;AAHG,CAA9B","sourcesContent":["import React from 'react';\nimport copy from 'clipboard-copy';\nimport PropTypes from 'prop-types';\nimport shareIcon from '../../../images/shareIcon.svg';\n\nfunction SecondShareButton({ itemId, type, testID }) {\n  console.log(typeof itemId)\n  console.log(typeof type)\n  console.log(typeof testID)\n  const [showCopy, setShowCopy] = React.useState(false);\n\n  function copyToClipBoard() {\n    copy(`http://localhost:3000/${type.includes('bebida')\n      ? 'bebidas' : 'comidas'}/${itemId}`);\n    setShowCopy(true);\n  }\n  return (\n    <>\n      <button type=\"button\" onClick={ () => copyToClipBoard() }>\n        <img\n          data-testid={ testID }\n          src={ shareIcon }\n          alt=\"BotÃ£o compartilhar\"\n        />\n      </button>\n      { showCopy && <p>Link copiado!</p> }\n    </>\n  );\n}\n\nexport default SecondShareButton;\n\nSecondShareButton.propTypes = {\n  itemId: PropTypes.number.isRequired,\n  type: PropTypes.string.isRequired,\n  testID: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}