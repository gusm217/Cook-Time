{"ast":null,"code":"var _jsxFileName = \"/home/vinicius/Desktop/AppRecipes/sd-011-project-recipes-app/src/Pages/Components/InprogressFood.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../../styles/InProgressFood.css';\nimport { manageDetailAPI } from '../../Helpers/convertUrlToID';\n\nfunction InProgressFood() {\n  const {\n    id\n  } = useParams();\n  const [usedIngredients, setUsedIngredients] = useState([]);\n  const [itemDetail, setItemDetail] = useState({\n    meals: null\n  });\n  const arrayOfIngredients = [];\n  const arrayOfMeasures = [];\n  useEffect(() => {\n    const currentStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (!currentStorage) {\n      localStorage.setItem('inProgressRecipes', JSON.stringify({\n        cocktails: {},\n        meals: {\n          [id]: []\n        }\n      }));\n    }\n\n    if (currentStorage && currentStorage.meals[id]) {\n      setUsedIngredients(currentStorage.meals[id]);\n    }\n\n    const fetchFood = async () => {\n      const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const detailRequest = await response.json();\n      setItemDetail(manageDetailAPI(detailRequest));\n    };\n\n    fetchFood(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    const currentStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    currentStorage.meals[id] = usedIngredients;\n    localStorage.setItem('inProgressRecipes', JSON.stringify(currentStorage)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [usedIngredients]); // Parte que separa os ingredientes da receitas\n\n  if (itemDetail.meals !== null) {\n    const food = itemDetail.meals[0];\n    const arrayOfIngredientsKey = Object.keys(food).filter(key => key.includes('strIngredient'));\n    const arrayOfMeasuresKey = Object.keys(food).filter(key => key.includes('strMeasure'));\n    arrayOfIngredientsKey.map(ingredient => {\n      if (food[ingredient] !== '' && food[ingredient] !== ' ' && food[ingredient] !== null) {\n        arrayOfIngredients.push(food[ingredient]);\n      }\n\n      return null;\n    });\n    arrayOfMeasuresKey.map(ingredient => {\n      if (food[ingredient] !== '' && food[ingredient] !== ' ' && food[ingredient] !== null) {\n        arrayOfMeasures.push(food[ingredient]);\n      }\n\n      return null;\n    });\n  }\n\n  function handleCheckBox(e) {}\n\n  const {\n    meals: anyFood\n  } = itemDetail;\n  return anyFood !== null && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, anyFood[0].strMeal), /*#__PURE__*/React.createElement(\"img\", {\n    width: \"350\",\n    src: anyFood[0].strMealThumb,\n    alt: `Foto da comida chamada ${anyFood[0].strMeal}`,\n    \"data-testid\": \"recipe-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"share-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"Compartilhar\"), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"favorite-btn\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, \"Favoritar\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, anyFood[0].strCategory), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Ingredientes\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"steps-inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, arrayOfIngredients.map((ingredient, i) => /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: ingredient,\n    key: `${ingredient}-${i}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: ingredient,\n    type: \"checkbox\",\n    \"data-testid\": `${i}-ingredient-step`,\n    onChange: e => handleCheckBox(e),\n    checked: usedIngredients.includes(ingredient),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }), `${arrayOfIngredients[i]} - ${arrayOfMeasures[i]}`)))), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"Instru\\xE7\\xF5es\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, anyFood[0].strInstructions)), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"finish-recipe-btn\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, \"Finalizar Receita\"));\n}\n\nexport default InProgressFood;","map":{"version":3,"sources":["/home/vinicius/Desktop/AppRecipes/sd-011-project-recipes-app/src/Pages/Components/InprogressFood.jsx"],"names":["React","useEffect","useState","useParams","manageDetailAPI","InProgressFood","id","usedIngredients","setUsedIngredients","itemDetail","setItemDetail","meals","arrayOfIngredients","arrayOfMeasures","currentStorage","JSON","parse","localStorage","getItem","setItem","stringify","cocktails","fetchFood","response","fetch","detailRequest","json","food","arrayOfIngredientsKey","Object","keys","filter","key","includes","arrayOfMeasuresKey","map","ingredient","push","handleCheckBox","e","anyFood","strMeal","strMealThumb","strCategory","i","strInstructions"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../../styles/InProgressFood.css';\nimport { manageDetailAPI } from '../../Helpers/convertUrlToID';\n\nfunction InProgressFood() {\n  const { id } = useParams();\n  const [usedIngredients, setUsedIngredients] = useState([]);\n  const [itemDetail, setItemDetail] = useState({\n    meals: null,\n  });\n\n  const arrayOfIngredients = [];\n  const arrayOfMeasures = [];\n\n  useEffect(() => {\n    const currentStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (!currentStorage) {\n      localStorage.setItem('inProgressRecipes', JSON.stringify({\n        cocktails: {},\n        meals: { [id]: [] },\n      }));\n    }\n\n    if (currentStorage && currentStorage.meals[id]) {\n      setUsedIngredients(currentStorage.meals[id]);\n    }\n\n    const fetchFood = async () => {\n      const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const detailRequest = await response.json();\n      setItemDetail(manageDetailAPI(detailRequest));\n    };\n    fetchFood();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const currentStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    currentStorage.meals[id] = usedIngredients;\n    localStorage.setItem('inProgressRecipes', JSON.stringify(currentStorage));\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [usedIngredients]);\n\n  // Parte que separa os ingredientes da receitas\n  if (itemDetail.meals !== null) {\n    const food = itemDetail.meals[0];\n\n    const arrayOfIngredientsKey = Object\n      .keys(food).filter((key) => key.includes('strIngredient'));\n    const arrayOfMeasuresKey = Object\n      .keys(food).filter((key) => key.includes('strMeasure'));\n    arrayOfIngredientsKey.map((ingredient) => {\n      if ((food[ingredient] !== ''\n      && food[ingredient] !== ' '\n      && food[ingredient] !== null)) {\n        arrayOfIngredients.push(food[ingredient]);\n      }\n      return null;\n    });\n    arrayOfMeasuresKey.map((ingredient) => {\n      if ((food[ingredient] !== ''\n      && food[ingredient] !== ' '\n      && food[ingredient] !== null)) {\n        arrayOfMeasures.push(food[ingredient]);\n      }\n      return null;\n    });\n  }\n\n  function handleCheckBox(e) {\n\n  }\n\n  const { meals: anyFood } = itemDetail;\n  return anyFood !== null && (\n    <div>\n      <h1 data-testid=\"recipe-title\">{anyFood[0].strMeal}</h1>\n      <img\n        width=\"350\"\n        src={ anyFood[0].strMealThumb }\n        alt={ `Foto da comida chamada ${anyFood[0].strMeal}` }\n        data-testid=\"recipe-photo\"\n      />\n      <button type=\"button\" data-testid=\"share-btn\">Compartilhar</button>\n      <button data-testid=\"favorite-btn\" type=\"button\">Favoritar</button>\n      <p data-testid=\"recipe-category\">{anyFood[0].strCategory}</p>\n      <section>\n        <h2>Ingredientes</h2>\n        <div className=\"steps-inputs\">\n          { arrayOfIngredients.map((ingredient, i) => (\n            <label\n              htmlFor={ ingredient }\n              key={ `${ingredient}-${i}` }\n            >\n              <input\n                id={ ingredient }\n                type=\"checkbox\"\n                data-testid={ `${i}-ingredient-step` }\n                onChange={ (e) => handleCheckBox(e) }\n                checked={ usedIngredients.includes(ingredient) }\n              />\n              {`${arrayOfIngredients[i]} - ${arrayOfMeasures[i]}`}\n            </label>\n          ))}\n        </div>\n      </section>\n      <section>\n        <h2>Instruções</h2>\n        <p data-testid=\"instructions\">{anyFood[0].strInstructions}</p>\n      </section>\n      <button data-testid=\"finish-recipe-btn\" type=\"button\">Finalizar Receita</button>\n    </div>\n  );\n}\n\nexport default InProgressFood;\n"]},"metadata":{},"sourceType":"module"}