{"ast":null,"code":"var _jsxFileName = \"/home/vinicius/Desktop/AppRecipes/sd-011-project-recipes-app/src/Pages/Components/FavoriteButton.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport blackHeartIcon from \"../../images/blackHeartIcon.svg\";\nimport whiteHeartIcon from \"../../images/whiteHeartIcon.svg\";\nexport default function FavoriteButton({\n  currentItem,\n  typeOf\n}) {\n  const [isFavorite, setIsFavorite] = useState(false);\n  const {\n    id\n  } = useParams();\n\n  function verifyIfIsFavorite() {\n    const currentFavoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    setIsFavorite(currentFavoriteRecipes.some(any => any.id === id));\n  }\n\n  useEffect(() => {\n    const currentFavoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n    if (!currentFavoriteRecipes) {\n      localStorage.setItem('favoriteRecipes', JSON.stringify([]));\n    }\n\n    verifyIfIsFavorite();\n  }, []);\n\n  function toggleFavorite() {\n    const currentFavoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n    if (typeOf === 'Drink') {\n      if (currentFavoriteRecipes.some(anyItem => anyItem.id === id)) {\n        const newStorage = currentFavoriteRecipes.filter(any => any.id !== id);\n        localStorage.setItem('favoriteRecipes', JSON.stringify(newStorage));\n      } else {\n        currentFavoriteRecipes.push({\n          id: currentItem.idDrink,\n          type: 'Bebida',\n          area: '',\n          category: currentItem.strCategory,\n          alcoholicOrNot: currentItem.strAlcoholic === 'Non alcoholic' || currentItem.strAlcoholic === 'Alcoholic' ? currentItem.strAlcoholic : '',\n          name: currentItem.strDrink,\n          image: currentItem.strDrinkThumb\n        });\n        localStorage.setItem('favoriteRecipes', JSON.stringify(currentFavoriteRecipes));\n      }\n    }\n\n    if (typeOf === 'Meal') {\n      if (currentFavoriteRecipes.some(anyItem => anyItem.id === id)) {\n        const newStorage = currentFavoriteRecipes.filter(any => any.id !== id);\n        localStorage.setItem('favoriteRecipes', JSON.stringify(newStorage));\n      } else {\n        currentFavoriteRecipes.push({\n          id: currentItem.idMeal,\n          type: 'Comida',\n          area: currentItem.strArea,\n          category: currentItem.strCategory,\n          alcoholicOrNot: '',\n          name: currentItem.strMeal,\n          image: currentItem.strMealThumb\n        });\n        localStorage.setItem('favoriteRecipes', JSON.stringify(currentFavoriteRecipes));\n      }\n    }\n\n    verifyIfIsFavorite();\n  }\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => toggleFavorite(),\n    \"data-testid\": \"favorite-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: isFavorite ? blackHeartIcon : whiteHeartIcon,\n    alt: \"Bot\\xE3o de receita favorita\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/vinicius/Desktop/AppRecipes/sd-011-project-recipes-app/src/Pages/Components/FavoriteButton.jsx"],"names":["React","useEffect","useState","useParams","FavoriteButton","currentItem","typeOf","isFavorite","setIsFavorite","id","verifyIfIsFavorite","currentFavoriteRecipes","JSON","parse","localStorage","getItem","some","any","setItem","stringify","toggleFavorite","anyItem","newStorage","filter","push","idDrink","type","area","category","strCategory","alcoholicOrNot","strAlcoholic","name","strDrink","image","strDrinkThumb","idMeal","strArea","strMeal","strMealThumb","blackHeartIcon","whiteHeartIcon"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\n\nexport default function FavoriteButton({ currentItem, typeOf }) {\n  const [isFavorite, setIsFavorite] = useState(false);\n  const { id } = useParams();\n\n  function verifyIfIsFavorite() {\n    const currentFavoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n    setIsFavorite(currentFavoriteRecipes.some((any) => any.id === id));\n  }\n\n  useEffect(() => {\n    const currentFavoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (!currentFavoriteRecipes) {\n      localStorage.setItem('favoriteRecipes', JSON.stringify([]));\n    }\n    verifyIfIsFavorite();\n  }, []);\n\n  function toggleFavorite() {\n    const currentFavoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (typeOf === 'Drink') {\n      if (currentFavoriteRecipes.some((anyItem) => anyItem.id === id)) {\n        const newStorage = currentFavoriteRecipes.filter((any) => any.id !== id);\n        localStorage.setItem('favoriteRecipes', JSON.stringify(newStorage));\n      } else {\n        currentFavoriteRecipes.push({\n          id: currentItem.idDrink,\n          type: 'Bebida',\n          area: '',\n          category: currentItem.strCategory,\n          alcoholicOrNot: currentItem.strAlcoholic === 'Non alcoholic'\n          || currentItem.strAlcoholic === 'Alcoholic'\n            ? currentItem.strAlcoholic : '',\n          name: currentItem.strDrink,\n          image: currentItem.strDrinkThumb,\n        });\n        localStorage.setItem('favoriteRecipes', JSON.stringify(currentFavoriteRecipes));\n      }\n    }\n\n    if (typeOf === 'Meal') {\n      if (currentFavoriteRecipes.some((anyItem) => anyItem.id === id)) {\n        const newStorage = currentFavoriteRecipes.filter((any) => any.id !== id);\n        localStorage.setItem('favoriteRecipes', JSON.stringify(newStorage));\n      } else {\n        currentFavoriteRecipes.push({\n          id: currentItem.idMeal,\n          type: 'Comida',\n          area: currentItem.strArea,\n          category: currentItem.strCategory,\n          alcoholicOrNot: '',\n          name: currentItem.strMeal,\n          image: currentItem.strMealThumb,\n        });\n        localStorage.setItem('favoriteRecipes', JSON.stringify(currentFavoriteRecipes));\n      }\n    }\n    verifyIfIsFavorite();\n  }\n\n  return (\n    <button type=\"button\" onClick={ () => toggleFavorite() } data-testid=\"favorite-btn\">\n      <img\n        src={ isFavorite ? blackHeartIcon : whiteHeartIcon }\n        alt=\"BotÃ£o de receita favorita\"\n      />\n    </button>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}