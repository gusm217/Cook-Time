{"ast":null,"code":"var _jsxFileName = \"/home/vinicius/Desktop/AppRecipes/sd-011-project-recipes-app/src/Pages/Components/InprogressDrink.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ShareButton from './ShareButton';\nimport '../../styles/detail-screen.css';\nimport { manageDetailAPI } from '../../Helpers/convertUrlToID';\n\nfunction InProgressDrink() {\n  const {\n    id\n  } = useParams();\n  const [usedIngredients, setUsedIngredients] = useState([]);\n  const [showFinish, setShowFinish] = useState(true);\n  const [itemDetail, setItemDetail] = useState({\n    drinks: null\n  });\n  const arrayOfIngredients = [];\n  const arrayOfMeasures = [];\n  useEffect(() => {\n    const currentStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (!currentStorage) {\n      localStorage.setItem('inProgressRecipes', JSON.stringify({\n        cocktails: {},\n        meals: {\n          [id]: []\n        }\n      }));\n    }\n\n    if (currentStorage && currentStorage.meals[id]) {\n      setUsedIngredients(currentStorage.meals[id]);\n    }\n\n    const fetchFood = async () => {\n      const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const detailRequest = await response.json();\n      setItemDetail(manageDetailAPI(detailRequest));\n    };\n\n    fetchFood();\n\n    if (arrayOfIngredients.length === usedIngredients.length) {\n      setShowFinish(false);\n    } else {\n      setShowFinish(true);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []); // Parte que separa os ingredientes da receitas\n\n  if (itemDetail.drinks !== null) {\n    const food = itemDetail.drinks[0];\n    const arrayOfIngredientsKey = Object.keys(food).filter(key => key.includes('strIngredient'));\n    const arrayOfMeasuresKey = Object.keys(food).filter(key => key.includes('strMeasure'));\n    arrayOfIngredientsKey.map(ingredient => {\n      if (food[ingredient] !== '' && food[ingredient] !== ' ' && food[ingredient] !== null) {\n        arrayOfIngredients.push(food[ingredient]);\n      }\n\n      return null;\n    });\n    arrayOfMeasuresKey.map(ingredient => {\n      if (food[ingredient] !== '' && food[ingredient] !== ' ' && food[ingredient] !== null) {\n        arrayOfMeasures.push(food[ingredient]);\n      }\n\n      return null;\n    });\n  }\n\n  const {\n    drinks\n  } = itemDetail;\n  return itemDetail.drinks !== null && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, drinks[0].strDrink), /*#__PURE__*/React.createElement(\"img\", {\n    width: \"350\",\n    src: drinks[0].strDrinkThumb,\n    alt: `Foto da bebida chamada ${drinks[0].strDrink}`,\n    \"data-testid\": \"recipe-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"favorite-btn\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"Favoritar\"), /*#__PURE__*/React.createElement(ShareButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, drinks[0].strCategory), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Ingredientes\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"steps-inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, arrayOfIngredients.map((ingredient, i) => /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: ingredient,\n    key: `${ingredient}-${i}`,\n    \"data-testid\": `${i}-ingredient-step`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: ingredient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }), `${arrayOfIngredients[i]} - ${arrayOfMeasures[i]}`)))), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"Instru\\xE7\\xF5es\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, drinks[0].strInstructions)));\n}\n\nexport default InProgressDrink;","map":{"version":3,"sources":["/home/vinicius/Desktop/AppRecipes/sd-011-project-recipes-app/src/Pages/Components/InprogressDrink.jsx"],"names":["React","useEffect","useState","useParams","ShareButton","manageDetailAPI","InProgressDrink","id","usedIngredients","setUsedIngredients","showFinish","setShowFinish","itemDetail","setItemDetail","drinks","arrayOfIngredients","arrayOfMeasures","currentStorage","JSON","parse","localStorage","getItem","setItem","stringify","cocktails","meals","fetchFood","response","fetch","detailRequest","json","length","food","arrayOfIngredientsKey","Object","keys","filter","key","includes","arrayOfMeasuresKey","map","ingredient","push","strDrink","strDrinkThumb","strCategory","i","strInstructions"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ShareButton from './ShareButton';\nimport '../../styles/detail-screen.css';\nimport { manageDetailAPI } from '../../Helpers/convertUrlToID';\n\nfunction InProgressDrink() {\n  const { id } = useParams();\n  const [usedIngredients, setUsedIngredients] = useState([]);\n  const [showFinish, setShowFinish] = useState(true);\n  const [itemDetail, setItemDetail] = useState({\n    drinks: null,\n  });\n\n  const arrayOfIngredients = [];\n  const arrayOfMeasures = [];\n\n  useEffect(() => {\n    const currentStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (!currentStorage) {\n      localStorage.setItem('inProgressRecipes', JSON.stringify({\n        cocktails: {},\n        meals: { [id]: [] },\n      }));\n    }\n\n    if (currentStorage && currentStorage.meals[id]) {\n      setUsedIngredients(currentStorage.meals[id]);\n    }\n\n    const fetchFood = async () => {\n      const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const detailRequest = await response.json();\n      setItemDetail(manageDetailAPI(detailRequest));\n    };\n    fetchFood();\n\n    if (arrayOfIngredients.length === usedIngredients.length) {\n      setShowFinish(false);\n    } else {\n      setShowFinish(true);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Parte que separa os ingredientes da receitas\n  if (itemDetail.drinks !== null) {\n    const food = itemDetail.drinks[0];\n\n    const arrayOfIngredientsKey = Object\n      .keys(food).filter((key) => key.includes('strIngredient'));\n    const arrayOfMeasuresKey = Object\n      .keys(food).filter((key) => key.includes('strMeasure'));\n    arrayOfIngredientsKey.map((ingredient) => {\n      if ((food[ingredient] !== ''\n      && food[ingredient] !== ' '\n      && food[ingredient] !== null)) {\n        arrayOfIngredients.push(food[ingredient]);\n      }\n      return null;\n    });\n    arrayOfMeasuresKey.map((ingredient) => {\n      if ((food[ingredient] !== ''\n      && food[ingredient] !== ' '\n      && food[ingredient] !== null)) {\n        arrayOfMeasures.push(food[ingredient]);\n      }\n      return null;\n    });\n  }\n\n  const { drinks } = itemDetail;\n  return itemDetail.drinks !== null && (\n    <div>\n      <h1 data-testid=\"recipe-title\">{drinks[0].strDrink}</h1>\n      <img\n        width=\"350\"\n        src={ drinks[0].strDrinkThumb }\n        alt={ `Foto da bebida chamada ${drinks[0].strDrink}` }\n        data-testid=\"recipe-photo\"\n      />\n      <button data-testid=\"favorite-btn\" type=\"button\">Favoritar</button>\n      <ShareButton />\n      <p data-testid=\"recipe-category\">{drinks[0].strCategory}</p>\n      <section>\n        <h2>Ingredientes</h2>\n        <div className=\"steps-inputs\">\n          { arrayOfIngredients.map((ingredient, i) => (\n            <label\n              htmlFor={ ingredient }\n              key={ `${ingredient}-${i}` }\n              data-testid={ `${i}-ingredient-step` }\n            >\n              <input type=\"checkbox\" id={ ingredient } />\n              {`${arrayOfIngredients[i]} - ${arrayOfMeasures[i]}`}\n            </label>\n          ))}\n        </div>\n      </section>\n      <section>\n        <h2>Instruções</h2>\n        <p data-testid=\"instructions\">{drinks[0].strInstructions}</p>\n      </section>\n    </div>\n  );\n}\n\nexport default InProgressDrink;\n"]},"metadata":{},"sourceType":"module"}